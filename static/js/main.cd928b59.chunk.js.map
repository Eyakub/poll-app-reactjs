{"version":3,"sources":["components/sidebar/poll-list.jsx","components/poll-form/form.jsx","components/poll-form/index.jsx","components/sidebar/index.jsx","components/main-content/participate-form.jsx","components/main-content/index.jsx","data/polls.js","App.jsx","serviceWorker.js","index.js"],"names":["PollList","props","polls","length","ListGroup","map","poll","ListGroupItem","key","id","onClick","selectPoll","style","cursor","title","substr","MyForm","description","options","errors","buttonValue","handleChange","handleOptionChange","createOption","deleteOption","handleSubmit","Form","onSubmit","FormGroup","Label","for","Input","name","placeholder","value","onChange","invalid","FormFeedback","type","marginLeft","background","color","padding","borderRadius","opt","index","className","e","Button","disabled","defaultOptions","shortid","generate","vote","PollForm","state","componentDidMount","Object","keys","setState","event","target","push","alert","splice","preventDefault","validate","isValid","console","log","isUpdate","submit","reset","optionErrors","forEach","this","React","Component","Sidebar","openModal","toggleModal","searchTerm","handleSearch","Modal","isOpen","toggle","unmountOnClose","ModalHeader","ModalBody","addNewPoll","ParticipationForm","selectedOption","getOpinion","pollId","deletePoll","CustomInput","totalVote","toFixed","MainContent","updatePoll","isOpenk","created","Date","opinions","App","selectedPoll","concat","updatedPoll","find","p","filter","response","option","o","opinion","performSearch","toLowerCase","includes","POLLS","Container","Row","Col","md","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8QA0BeA,EAtBE,SAACC,GAChB,OAA2B,IAAvBA,EAAMC,MAAMC,OACP,+CAIP,kBAACC,EAAA,EAAD,KACGH,EAAMC,MAAMG,KAAI,SAAAC,GAAI,OACnB,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAAKG,GACVC,QAAS,kBAAMT,EAAMU,WAAWL,EAAKG,KACrCG,MAAO,CAAEC,OAAQ,YAEhBP,EAAKQ,MAAMX,OAAS,GACjBG,EAAKQ,MAAMC,OAAO,EAAG,IAAM,MAC3BT,EAAKQ,Y,iGC+EJE,EAxFA,SAAC,GAWT,IAVLF,EAUI,EAVJA,MACAG,EASI,EATJA,YACAC,EAQI,EARJA,QACAC,EAOI,EAPJA,OACAC,EAMI,EANJA,YACAC,EAKI,EALJA,aACAC,EAII,EAJJA,mBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEA,OACE,kBAACC,EAAA,EAAD,CAAMC,SAAUF,GACd,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLvB,GAAG,QACHwB,YAAY,mBACZC,MAAOpB,EACPqB,SAAUd,EACVe,UAASjB,EAAOL,QAEjBK,EAAOL,OAAS,kBAACuB,EAAA,EAAD,KAAelB,EAAOL,QAGzC,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,EAAA,EAAD,CACEO,KAAK,WACLN,KAAK,cACLvB,GAAG,cACHwB,YAAY,yBACZC,MAAOjB,EACPkB,SAAUd,EACVe,UAASjB,EAAOF,cAEjBE,EAAOF,aACN,kBAACoB,EAAA,EAAD,KAAelB,EAAOF,cAI1B,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBAEE,0BACEjB,MAAO,CACL2B,WAAY,OACZC,WAAY,QACZC,MAAO,QACPC,QAAS,MACTC,aAAc,MACd9B,OAAQ,WAEVH,QAASa,GATX,eAcDL,EAAQb,KAAI,SAACuC,EAAKC,GAAN,OACX,yBAAKrC,IAAKoC,EAAInC,GAAIqC,UAAU,eAC1B,kBAACf,EAAA,EAAD,CACEG,MAAOU,EAAIV,MACXC,SAAU,SAACY,GAAD,OAAOzB,EAAmByB,EAAGF,IACvCT,WAASjB,EAAOD,UAAWC,EAAOD,QAAQ2B,MAE1C1B,EAAOD,SACP,kBAACmB,EAAA,EAAD,KAAelB,EAAOD,SAExB,kBAAC8B,EAAA,EAAD,CACEP,MAAM,SACNQ,SAAU/B,EAAQf,QAAU,EAC5B2C,UAAU,OACVpC,QAAS,kBAAMc,EAAaqB,KAJ9B,eAWN,kBAACG,EAAA,EAAD,CAAQP,MAAM,UAAUH,KAAK,UAC1BlB,KCvFH8B,EAAiB,CACrB,CAAEzC,GAAI0C,IAAQC,WAAYlB,MAAO,GAAImB,KAAM,GAC3C,CAAE5C,GAAI0C,IAAQC,WAAYlB,MAAO,GAAImB,KAAM,IAwJ9BC,E,4MApJbC,MAAQ,CACNzC,MAAO,GACPG,YAAa,GACbC,QAASgC,EACT/B,OAAQ,I,EAGVqC,kBAAoB,WAAO,IACjBlD,EAAS,EAAKL,MAAdK,KACJA,GAAQmD,OAAOC,KAAKpD,GAAMH,OAAS,GACrC,EAAKwD,SAAS,CACZ7C,MAAOR,EAAKQ,MACZG,YAAaX,EAAKW,YAClBC,QAASZ,EAAKY,W,EAKpBG,aAAe,SAACuC,GACd,EAAKD,SAAL,eACGC,EAAMC,OAAO7B,KAAO4B,EAAMC,OAAO3B,S,EAItCZ,mBAAqB,SAACsC,EAAOf,GAAU,IAE7B3B,EAAY,EAAKqC,MAAjBrC,QACRA,EAAQ2B,GAAOX,MAAQ0B,EAAMC,OAAO3B,MACpC,EAAKyB,SAAS,CAAEzC,a,EAGlBK,aAAe,WAAO,IACZL,EAAY,EAAKqC,MAAjBrC,QACJA,EAAQf,OAAS,GACnBe,EAAQ4C,KAAK,CACXrD,GAAI0C,IAAQC,WACZlB,MAAO,GACPmB,KAAM,IAER,EAAKM,SAAS,CAAEzC,aAEhB6C,MAAM,iC,EAIVvC,aAAe,SAACqB,GAAW,IACjB3B,EAAY,EAAKqC,MAAjBrC,QAEJA,EAAQf,OAAS,GAEnBe,EAAQ8C,OAAOnB,EAAO,GACtB,EAAKc,SAAS,CAAEzC,aAEhB6C,MAAM,wC,EAIVtC,aAAe,SAACmC,GACdA,EAAMK,iBADkB,MAGI,EAAKC,WAAzBC,EAHgB,EAGhBA,QAAShD,EAHO,EAGPA,OAEjB,GADAiD,QAAQC,IAAI,aAAcF,GACtBA,EAAS,CAAC,IAAD,EAC6B,EAAKZ,MACvCjD,EAAO,CACXQ,MAHS,EACHA,MAGNG,YAJS,EACIA,YAIbC,QALS,EACiBA,SAQxB,EAAKjB,MAAMqE,UACbhE,EAAKG,GAAK,EAAKR,MAAMK,KAAKG,GAC1B,EAAKR,MAAMsE,OAAOjE,GAClByD,MAAM,0BAEN,EAAK9D,MAAMsE,OAAOjE,GAElBsD,EAAMC,OAAOW,QACb,EAAKb,SAAS,CACZ7C,MAAO,GACPG,YAAa,GACbC,QAASgC,EACT/B,OAAQ,WAIZ,EAAKwC,SAAS,CAAExC,Y,EAIpB+C,SAAW,WACT,IAAM/C,EAAS,GADA,EAEyB,EAAKoC,MAArCzC,EAFO,EAEPA,MAAOG,EAFA,EAEAA,YAAaC,EAFb,EAEaA,QACvBJ,EAEMA,EAAMX,OAAS,GACxBgB,EAAOL,MAAQ,kBACNA,EAAMX,OAAS,MACxBgB,EAAOL,MAAQ,kBAJfK,EAAOL,MAAQ,yBAOZG,GAEOA,EAAc,MACxBE,EAAOF,YAAc,wBAFrBE,EAAOF,YAAc,+BAMvB,IAAMwD,EAAe,GAcrB,OAbAvD,EAAQwD,SAAQ,SAAC9B,EAAKC,GACfD,EAAIV,MAGEU,EAAIV,MAAM/B,OAAS,MAC5BsE,EAAa5B,GAAS,wBAHtB4B,EAAa5B,GAAS,uBAOtB4B,EAAatE,OAAS,IACxBgB,EAAOD,QAAUuD,GAGZ,CACLtD,SACAgD,QAAwC,IAA/BV,OAAOC,KAAKvC,GAAQhB,S,uDAIvB,IAAD,EACyCwE,KAAKpB,MAA7CzC,EADD,EACCA,MAAOG,EADR,EACQA,YAAaC,EADrB,EACqBA,QAASC,EAD9B,EAC8BA,OACrC,OACE,kBAAC,EAAD,CACEL,MAAOA,EACPG,YAAaA,EACbC,QAASA,EACTE,YAAauD,KAAK1E,MAAMmB,aAAe,cACvCD,OAAQA,EACRE,aAAcsD,KAAKtD,aACnBC,mBAAoBqD,KAAKrD,mBACzBC,aAAcoD,KAAKpD,aACnBC,aAAcmD,KAAKnD,aACnBC,aAAckD,KAAKlD,mB,GA/IJmD,IAAMC,WCwCdC,E,4MA5CbvB,MAAQ,CACNwB,WAAW,G,EAGbC,YAAc,WACZ,EAAKrB,SAAS,CACZoB,WAAY,EAAKxB,MAAMwB,a,uDAIjB,IAAD,OACP,OACE,yBAAKnE,MAAO,CAAE4B,WAAY,UAAWE,QAAS,SAC5C,yBAAKI,UAAU,eACb,kBAACf,EAAA,EAAD,CACEO,KAAK,SACLL,YAAY,SACZC,MAAOyC,KAAK1E,MAAMgF,WAClB9C,SAAU,SAACY,GAAD,OAAO,EAAK9C,MAAMiF,aAAanC,EAAEc,OAAO3B,UAEpD,kBAACc,EAAA,EAAD,CAAQP,MAAM,UAAUK,UAAU,OAAOpC,QAASiE,KAAKK,aAAvD,QAIF,6CACA,6BAEA,kBAAC,EAAD,CAAU9E,MAAOyE,KAAK1E,MAAMC,MAAOS,WAAYgE,KAAK1E,MAAMU,aAE1D,kBAACwE,EAAA,EAAD,CACEC,OAAQT,KAAKpB,MAAMwB,UACnBM,OAAQV,KAAKK,YACbM,gBAAgB,GAEhB,kBAACC,EAAA,EAAD,CAAaF,OAAQV,KAAKK,aAA1B,mBACA,kBAACQ,EAAA,EAAD,KACE,kBAAC,EAAD,CAAUjB,OAAQI,KAAK1E,MAAMwF,oB,GArCnBb,IAAMC,W,QC2Iba,E,4MApIbnC,MAAQ,CACNvB,KAAM,GACN2D,eAAgB,GAChBxE,OAAQ,I,EAGVE,aAAe,SAACuC,GACd,EAAKD,SAAL,eACGC,EAAMC,OAAO7B,KAAO4B,EAAMC,OAAO3B,S,EAItCT,aAAe,SAACmC,GACdA,EAAMK,iBADkB,MAEI,EAAKC,WAAzB/C,EAFgB,EAEhBA,OAFgB,EAERgD,SAGd,EAAKlE,MAAM2F,WAAW,CACpBC,OAAQ,EAAK5F,MAAMK,KAAKG,GACxBuB,KAAM,EAAKuB,MAAMvB,KACjB2D,eAAgB,EAAKpC,MAAMoC,iBAE7B/B,EAAMC,OAAOW,QACb,EAAKb,SAAS,CACZ3B,KAAM,GACN2D,eAAgB,GAChBxE,OAAQ,MAGV,EAAKwC,SAAS,CAAExC,Y,EAIpB+C,SAAW,WACT,IAAM/C,EAAS,GAYf,OAVK,EAAKoC,MAAMvB,KAEL,EAAKuB,MAAMvB,KAAK7B,OAAS,KAClCgB,EAAOa,KAAO,iBAFdb,EAAOa,KAAO,wBAKX,EAAKuB,MAAMoC,iBACdxE,EAAOwE,eAAiB,4BAGnB,CACLxE,SACAgD,QAAwC,IAA/BV,OAAOC,KAAKvC,GAAQhB,S,uDAIvB,IAAD,OACP,OACE,kBAACuB,EAAA,EAAD,CAAMC,SAAUgD,KAAKlD,cACnB,yBAAKqB,UAAU,UACb,uCACA,kBAACE,EAAA,EAAD,CACEP,MAAM,UACNH,KAAK,SACLQ,UAAU,UACVpC,QAASiE,KAAK1E,MAAM+E,aAJtB,QASA,kBAAChC,EAAA,EAAD,CACEV,KAAK,SACLQ,UAAU,OACVpC,QAAS,kBAAM,EAAKT,MAAM6F,WAAW,EAAK7F,MAAMK,KAAKG,MAHvD,WASDkE,KAAK1E,MAAMK,KAAKY,QAAQb,KAAI,SAACuC,GAAD,OAC3B,kBAAChB,EAAA,EAAD,CAAWkB,UAAU,OAAOtC,IAAKoC,EAAInC,IACnC,kBAACoB,EAAA,EAAD,CAAOiB,UAAU,UACf,kBAACiD,EAAA,EAAD,CACEzD,KAAK,QACL7B,GAAImC,EAAInC,GACRuB,KAAK,iBACLE,MAAOU,EAAInC,GACX0B,SAAU,EAAKd,aACfe,UAAS,EAAKmB,MAAMpC,OAAOwE,iBAE5B/C,EAAIV,MACL,0BACEtB,MAAO,CACL8B,QAAS,WACTF,WAAY,QACZC,MAAO,QACPE,aAAc,OAEhBG,UAAU,WAETF,EAAIS,MAGP,0BACEzC,MAAO,CACL8B,QAAS,WACTF,WAAY,SACZC,MAAO,QACPE,aAAc,QAGf,EAAK1C,MAAMK,KAAK0F,UAAY,GACvB,IAAMpD,EAAIS,KAAQ,EAAKpD,MAAMK,KAAK0F,WAAWC,QAAQ,GACvD,EAVN,UAgBN,kBAACrE,EAAA,EAAD,CAAWkB,UAAU,QACnB,kBAACjB,EAAA,EAAD,wBACA,kBAACE,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,YACZC,MAAOyC,KAAKpB,MAAMrB,MAClBC,SAAUwC,KAAKtD,aACfe,UAASuC,KAAKpB,MAAMpC,OAAOa,OAE3B2C,KAAKpB,MAAMpC,OAAOa,MAAQ,kBAACK,EAAA,EAAD,KAAesC,KAAKpB,MAAMpC,OAAOa,OAE/D,kBAACgB,EAAA,EAAD,CAAQV,KAAK,UAAb,4B,GA/HwBsC,IAAMC,WCsDvBqB,E,4MA3Db3C,MAAQ,CACNwB,WAAW,G,EAGbC,YAAc,WACZ,EAAKrB,SAAS,CACZoB,WAAY,EAAKxB,MAAMwB,YAEzBX,QAAQC,IAAI,EAAKd,MAAMwB,Y,uDAIvB,GAA4C,IAAxCtB,OAAOC,KAAKiB,KAAK1E,MAAMK,MAAMH,OAC/B,OACE,6BACE,yDACA,kHALC,MAa8CwE,KAAK1E,MAAlDK,EAbD,EAaCA,KAAMsF,EAbP,EAaOA,WAAYO,EAbnB,EAamBA,WAAYL,EAb/B,EAa+BA,WAEtC,OACE,6BACE,4BAAKxF,EAAKQ,OACV,2BAAIR,EAAKW,aACT,6BACA,kBAAC,EAAD,CACEX,KAAMA,EACNsF,WAAYA,EACZZ,YAAaL,KAAKK,YAClBc,WAAYA,IAGd,kBAACX,EAAA,EAAD,CACEiB,QAASzB,KAAKpB,MAAMwB,UACpBM,OAAQV,KAAKK,YACbM,gBAAgB,GAEhB,kBAACC,EAAA,EAAD,CAAaF,OAAQV,KAAKK,aAA1B,eAEA,kBAACQ,EAAA,EAAD,KACE,kBAAC,EAAD,CACElF,KAAMA,EACNgE,UAAU,EACVC,OAAQ4B,EACR/E,YAAY,uB,GAnDAwD,IAAMC,W,wBCwCjB3E,EA7CD,CACZ,CACEO,GAAI,IACJK,MAAO,6CACPG,YAAa,oFACbC,QAAS,CACP,CAAET,GAAI,IAAKyB,MAAO,IAAKmB,KAAM,GAC7B,CAAE5C,GAAI,IAAKyB,MAAO,SAAUmB,KAAM,GAClC,CAAE5C,GAAI,IAAKyB,MAAO,OAAQmB,KAAM,GAChC,CAAE5C,GAAI,IAAKyB,MAAO,KAAMmB,KAAM,IAEhCgD,QAAS,IAAIC,KACbN,UAAW,EACXO,SAAU,IAEZ,CACE9F,GAAI,IACJK,MAAO,oCACPG,YAAa,oFACbC,QAAS,CACP,CAAET,GAAI,IAAKyB,MAAO,QAASmB,KAAM,GACjC,CAAE5C,GAAI,IAAKyB,MAAO,OAAQmB,KAAM,GAChC,CAAE5C,GAAI,IAAKyB,MAAO,gBAAiBmB,KAAM,GACzC,CAAE5C,GAAI,IAAKyB,MAAO,SAAUmB,KAAM,IAEpCgD,QAAS,IAAIC,KACbN,UAAW,EACXO,SAAU,IAEZ,CACE9F,GAAI,IACJK,MAAO,6CACPG,YAAa,oFACbC,QAAS,CACP,CAAET,GAAI,IAAKyB,MAAO,IAAKmB,KAAM,GAC7B,CAAE5C,GAAI,IAAKyB,MAAO,SAAUmB,KAAM,GAClC,CAAE5C,GAAI,IAAKyB,MAAO,OAAQmB,KAAM,GAChC,CAAE5C,GAAI,IAAKyB,MAAO,KAAMmB,KAAM,IAEhCgD,QAAS,IAAIC,KACbN,UAAW,EACXO,SAAU,KCyECC,E,4MA1GbjD,MAAQ,CACNrD,MAAO,GACPuG,aAAc,GACdxB,WAAY,I,EAQdQ,WAAa,SAACnF,GACZA,EAAKG,GAAK0C,IAAQC,WAClB9C,EAAK+F,QAAU,IAAIC,KACnBhG,EAAK0F,UAAY,EACjB1F,EAAKiG,SAAW,GAEhB,EAAK5C,SAAS,CAEZzD,MAAO,EAAKqD,MAAMrD,MAAMwG,OAAOpG,M,EAInC6F,WAAa,SAACQ,GACZvC,QAAQC,IAAI,gBACZ,IAAMnE,EAAK,YAAO,EAAKqD,MAAMrD,OACvBI,EAAOJ,EAAM0G,MAAK,SAACC,GAAD,OAAOA,EAAEpG,KAAOkG,EAAYlG,MAEpDH,EAAKQ,MAAQ6F,EAAY7F,MACzBR,EAAKW,YAAc0F,EAAY1F,YAC/BX,EAAKY,QAAUyF,EAAYzF,QAE3B,EAAKyC,SAAS,CAAEzD,W,EAGlB4F,WAAa,SAACD,GACZ,IAAM3F,EAAQ,EAAKqD,MAAMrD,MAAM4G,QAAO,SAACD,GAAD,OAAOA,EAAEpG,KAAOoF,KACtD,EAAKlC,SAAS,CAAEzD,QAAOuG,aAAc,M,EAGvC9F,WAAa,SAACkF,GACZ,IAAMvF,EAAO,EAAKiD,MAAMrD,MAAM0G,MAAK,SAACC,GAAD,OAAOA,EAAEpG,KAAOoF,KACnDzB,QAAQC,IAAI,iBAAkBwB,GAC9B,EAAKlC,SAAS,CAAE8C,aAAcnG,K,EAGhCsF,WAAa,SAACmB,GAAc,IAClB7G,EAAU,EAAKqD,MAAfrD,MACFI,EAAOJ,EAAM0G,MAAK,SAACC,GAAD,OAAOA,EAAEpG,KAAOsG,EAASlB,UAC3CmB,EAAS1G,EAAKY,QAAQ0F,MAAK,SAACK,GAAD,OAAOA,EAAExG,KAAOsG,EAASpB,kBAE1DrF,EAAK0F,YACLgB,EAAO3D,OAEP,IAAM6D,EAAU,CACdzG,GAAI0C,IAAQC,WACZpB,KAAM+E,EAAS/E,KACf2D,eAAgBoB,EAASpB,gBAG3BrF,EAAKiG,SAASzC,KAAKoD,GACnB,EAAKvD,SAAS,CAAEzD,W,EAGlBgF,aAAe,SAACD,GACd,EAAKtB,SAAS,CACZsB,gB,EAIJkC,cAAgB,WACd,OAAO,EAAK5D,MAAMrD,MAAM4G,QAAO,SAACxG,GAAD,OAC7BA,EAAKQ,MAAMsG,cAAcC,SAAS,EAAK9D,MAAM0B,WAAWmC,mB,kEAjE1DzC,KAAKhB,SAAS,CAAEzD,MAAOoH,IACvBlD,QAAQC,IAAIiD,K,+BAqEZ,IAAMpH,EAAQyE,KAAKwC,gBAEnB,OADA/C,QAAQC,IAAIM,KAAKpB,OAEf,kBAACgE,EAAA,EAAD,CAAWzE,UAAU,QACnB,kBAAC0E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CACExH,MAAOA,EACP+E,WAAYN,KAAKpB,MAAM0B,WACvBC,aAAcP,KAAKO,aACnBvE,WAAYgE,KAAKhE,WACjB8E,WAAYd,KAAKc,cAIrB,kBAACgC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CACEpH,KAAMqE,KAAKpB,MAAMkD,aACjBb,WAAYjB,KAAKiB,WACjBO,WAAYxB,KAAKwB,WACjBL,WAAYnB,KAAKmB,oB,GAlGblB,IAAMC,WCKJ8C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxE,QAAQwE,MAAMA,EAAMC,c","file":"static/js/main.cd928b59.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\n\r\nconst PollList = (props) => {\r\n  if (props.polls.length === 0) {\r\n    return <p>There is no Poll</p>;\r\n  }\r\n\r\n  return (\r\n    <ListGroup>\r\n      {props.polls.map(poll => (\r\n        <ListGroupItem\r\n          key={poll.id}\r\n          onClick={() => props.selectPoll(poll.id)}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          {poll.title.length > 30\r\n            ? poll.title.substr(0, 30) + \"...\"\r\n            : poll.title}\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default PollList;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormFeedback,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst MyForm = ({\r\n  title,\r\n  description,\r\n  options,\r\n  errors,\r\n  buttonValue,\r\n  handleChange,\r\n  handleOptionChange,\r\n  createOption,\r\n  deleteOption,\r\n  handleSubmit,\r\n}) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"title\">Title</Label>\r\n        <Input\r\n          name=\"title\"\r\n          id=\"title\"\r\n          placeholder=\"Enter your title\"\r\n          value={title}\r\n          onChange={handleChange}\r\n          invalid={errors.title ? true : false}\r\n        />\r\n        {errors.title && <FormFeedback>{errors.title}</FormFeedback>}\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label for=\"Description\">Description</Label>\r\n        <Input\r\n          type=\"textarea\"\r\n          name=\"description\"\r\n          id=\"description\"\r\n          placeholder=\"Enter your description\"\r\n          value={description}\r\n          onChange={handleChange}\r\n          invalid={errors.description ? true : false}\r\n        />\r\n        {errors.description && (\r\n          <FormFeedback>{errors.description}</FormFeedback>\r\n        )}\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label>\r\n          Enter Options\r\n          <span\r\n            style={{\r\n              marginLeft: \"30px\",\r\n              background: \"green\",\r\n              color: \"white\",\r\n              padding: \"5px\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={createOption}\r\n          >\r\n            Add option\r\n          </span>\r\n        </Label>\r\n        {options.map((opt, index) => (\r\n          <div key={opt.id} className=\"d-flex my-2\">\r\n            <Input\r\n              value={opt.value}\r\n              onChange={(e) => handleOptionChange(e, index)}\r\n              invalid={errors.options && errors.options[index] ? true : false}\r\n            />\r\n            { errors.options && (\r\n              <FormFeedback>{errors.options}</FormFeedback>\r\n            )}\r\n            <Button\r\n              color=\"danger\"\r\n              disabled={options.length <= 2}\r\n              className=\"ml-2\"\r\n              onClick={() => deleteOption(index)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        ))}\r\n      </FormGroup>\r\n      <Button color='primary' type='submit'>\r\n        {buttonValue}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default MyForm;","import React from \"react\";\r\nimport {} from \"reactstrap\";\r\nimport shortid from \"shortid\";\r\nimport Form from \"./form\";\r\n\r\nconst defaultOptions = [\r\n  { id: shortid.generate(), value: \"\", vote: 0 },\r\n  { id: shortid.generate(), value: \"\", vote: 0 },\r\n];\r\n\r\nclass PollForm extends React.Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    options: defaultOptions,\r\n    errors: {},\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const { poll } = this.props;\r\n    if (poll && Object.keys(poll).length > 0) {\r\n      this.setState({\r\n        title: poll.title,\r\n        description: poll.description,\r\n        options: poll.options,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleOptionChange = (event, index) => {\r\n    // const options = [... this.state.options]\r\n    const { options } = this.state;\r\n    options[index].value = event.target.value;\r\n    this.setState({ options });\r\n  };\r\n\r\n  createOption = () => {\r\n    const { options } = this.state;\r\n    if (options.length < 5) {\r\n      options.push({\r\n        id: shortid.generate(),\r\n        value: \"\",\r\n        vote: 0,\r\n      });\r\n      this.setState({ options });\r\n    } else {\r\n      alert(\"You can create max 5 options\");\r\n    }\r\n  };\r\n\r\n  deleteOption = (index) => {\r\n    const { options } = this.state;\r\n    // as 2 option must so more than 2 option thn we can delete\r\n    if (options.length > 2) {\r\n      // only in that index we can delete 1 only\r\n      options.splice(index, 1);\r\n      this.setState({ options });\r\n    } else {\r\n      alert(\"You must have at least two options.\");\r\n    }\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { isValid, errors } = this.validate();\r\n    console.log(\"isvalid - \", isValid);\r\n    if (isValid) {\r\n      const { title, description, options } = this.state;\r\n      const poll = {\r\n        title,\r\n        description,\r\n        options,\r\n      };\r\n      \r\n      // when its from update form\r\n      if (this.props.isUpdate) {\r\n        poll.id = this.props.poll.id;\r\n        this.props.submit(poll);\r\n        alert(\"Updated Successfully\");\r\n      } else {\r\n        this.props.submit(poll);\r\n\r\n        event.target.reset();\r\n        this.setState({\r\n          title: \"\",\r\n          description: \"\",\r\n          options: defaultOptions,\r\n          errors: {},\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ errors });\r\n    }\r\n  };\r\n\r\n  validate = () => {\r\n    const errors = {};\r\n    const { title, description, options } = this.state;\r\n    if (!title) {\r\n      errors.title = \"Please provide a title\";\r\n    } else if (title.length < 20) {\r\n      errors.title = \"Title Too short\";\r\n    } else if (title.length > 100) {\r\n      errors.title = \"Title too long\";\r\n    }\r\n\r\n    if (!description) {\r\n      errors.description = \"Please provide a description\";\r\n    } else if (!description > 500) {\r\n      errors.description = \"Description too long\";\r\n    }\r\n\r\n    // as there is multiple option we took an array for errors\r\n    const optionErrors = [];\r\n    options.forEach((opt, index) => {\r\n      if (!opt.value) {\r\n        optionErrors[index] = \"Option text Empty\";\r\n        // optionErrors.push('Option text empty');\r\n      } else if (opt.value.length > 100) {\r\n        optionErrors[index] = \"Option text too long\";\r\n      }\r\n    });\r\n\r\n    if (optionErrors.length > 0) {\r\n      errors.options = optionErrors;\r\n    }\r\n\r\n    return {\r\n      errors,\r\n      isValid: Object.keys(errors).length === 0,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { title, description, options, errors } = this.state;\r\n    return (\r\n      <Form\r\n        title={title}\r\n        description={description}\r\n        options={options}\r\n        buttonValue={this.props.buttonValue || \"Create Poll\"}\r\n        errors={errors}\r\n        handleChange={this.handleChange}\r\n        handleOptionChange={this.handleOptionChange}\r\n        createOption={this.createOption}\r\n        deleteOption={this.deleteOption}\r\n        handleSubmit={this.handleSubmit}\r\n      ></Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PollForm;\r\n","import React from \"react\";\r\nimport PollList from \"./poll-list\";\r\nimport { Input, Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport PollForm from \"../poll-form\";\r\n\r\nclass Sidebar extends React.Component {\r\n  state = {\r\n    openModal: false,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      openModal: !this.state.openModal,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ background: \"#efefef\", padding: \"10px\" }}>\r\n        <div className=\"d-flex mb-5\">\r\n          <Input\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            value={this.props.searchTerm}\r\n            onChange={(e) => this.props.handleSearch(e.target.value)}\r\n          />\r\n          <Button color=\"success\" className=\"ml-2\" onClick={this.toggleModal}>\r\n            New\r\n          </Button>\r\n        </div>\r\n        <h3>List of Polls</h3>\r\n        <hr />\r\n\r\n        <PollList polls={this.props.polls} selectPoll={this.props.selectPoll} />\r\n      \r\n        <Modal\r\n          isOpen={this.state.openModal}\r\n          toggle={this.toggleModal}\r\n          unmountOnClose={true}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal}>Create new Poll</ModalHeader>\r\n          <ModalBody>\r\n            <PollForm submit={this.props.addNewPoll} />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n  Input,\r\n  CustomInput,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nclass ParticipationForm extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    selectedOption: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { errors, isValid } = this.validate();\r\n\r\n    if (isValid) {\r\n      this.props.getOpinion({\r\n        pollId: this.props.poll.id,\r\n        name: this.state.name,\r\n        selectedOption: this.state.selectedOption,\r\n      });\r\n      event.target.reset();\r\n      this.setState({\r\n        name: \"\",\r\n        selectedOption: \"\",\r\n        errors: {},\r\n      });\r\n    } else {\r\n      this.setState({ errors });\r\n    }\r\n  };\r\n\r\n  validate = () => {\r\n    const errors = {};\r\n\r\n    if (!this.state.name) {\r\n      errors.name = \"Please provide a name\";\r\n    } else if (this.state.name.length > 20) {\r\n      errors.name = \"Name too long\";\r\n    }\r\n\r\n    if (!this.state.selectedOption) {\r\n      errors.selectedOption = \"Please select one option\";\r\n    }\r\n\r\n    return {\r\n      errors,\r\n      isValid: Object.keys(errors).length === 0,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <div className=\"d-flex\">\r\n          <h4>Options</h4>\r\n          <Button\r\n            color=\"warning\"\r\n            type=\"button\"\r\n            className=\"ml-auto\"\r\n            onClick={this.props.toggleModal}\r\n          >\r\n            Edit\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"button\"\r\n            className=\"ml-2\"\r\n            onClick={() => this.props.deletePoll(this.props.poll.id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </div>\r\n\r\n        {this.props.poll.options.map((opt) => (\r\n          <FormGroup className=\"my-2\" key={opt.id}>\r\n            <Label className=\"d-flex\">\r\n              <CustomInput\r\n                type=\"radio\"\r\n                id={opt.id}\r\n                name=\"selectedOption\"\r\n                value={opt.id}\r\n                onChange={this.handleChange}\r\n                invalid={this.state.errors.selectedOption ? true : false}\r\n              />\r\n              {opt.value}\r\n              <span\r\n                style={{\r\n                  padding: \"5px 20px\",\r\n                  background: \"green\",\r\n                  color: \"white\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                className=\"ml-auto\"\r\n              >\r\n                {opt.vote}\r\n              </span>\r\n\r\n              <span\r\n                style={{\r\n                  padding: \"5px 20px\",\r\n                  background: \"orange\",\r\n                  color: \"white\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                {this.props.poll.totalVote > 0\r\n                  ? ((100 * opt.vote) / this.props.poll.totalVote).toFixed(2)\r\n                  : 0}\r\n                %\r\n              </span>\r\n            </Label>\r\n          </FormGroup>\r\n        ))}\r\n        <FormGroup className=\"my-3\">\r\n          <Label>Enter your Name</Label>\r\n          <Input\r\n            name=\"name\"\r\n            placeholder=\"Your name\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            invalid={this.state.errors.name ? true : false}\r\n          />\r\n          { this.state.errors.name && <FormFeedback>{this.state.errors.name}</FormFeedback>}\r\n        </FormGroup>\r\n        <Button type='submit'>Submit your Opinion</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ParticipationForm;","import React from \"react\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport ParticipationForm from \"./participate-form\";\r\nimport PollForm from \"../poll-form\";\r\n\r\nclass MainContent extends React.Component {\r\n  state = {\r\n    openModal: false,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      openModal: !this.state.openModal,\r\n    });\r\n    console.log(this.state.openModal)\r\n  };\r\n\r\n  render() {\r\n    if (Object.keys(this.props.poll).length === 0) {\r\n      return (\r\n        <div>\r\n          <h3>Welcome to my Application</h3>\r\n          <p>\r\n            You can create as many poll as you want. Click the new butotn to\r\n            createa new poll.\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const { poll, getOpinion, updatePoll, deletePoll } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h3>{poll.title}</h3>\r\n        <p>{poll.description}</p>\r\n        <br />\r\n        <ParticipationForm\r\n          poll={poll}\r\n          getOpinion={getOpinion}\r\n          toggleModal={this.toggleModal}\r\n          deletePoll={deletePoll}\r\n        />\r\n\r\n        <Modal\r\n          isOpenk={this.state.openModal}\r\n          toggle={this.toggleModal}\r\n          unmountOnClose={true}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal}>Update Poll</ModalHeader>\r\n\r\n          <ModalBody>\r\n            <PollForm\r\n              poll={poll}\r\n              isUpdate={true}\r\n              submit={updatePoll}\r\n              buttonValue=\"Update Poll\"\r\n            />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContent;\r\n","const polls = [\r\n  {\r\n    id: '1',\r\n    title: 'What is your favorite programming language',\r\n    description: 'There are a lot of popular languages available. Among them what is your favorite?',\r\n    options: [\r\n      { id: '1', value: 'C', vote: 0},\r\n      { id: '2', value: 'Python', vote: 0},\r\n      { id: '3', value: 'Java', vote: 0},\r\n      { id: '4', value: 'JS', vote: 0},\r\n    ],\r\n    created: new Date(),\r\n    totalVote: 0,\r\n    opinions: []\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Which one is the Covid-19 reason?',\r\n    description: 'There are a lot of popular languages available. Among them what is your favorite?',\r\n    options: [\r\n      { id: '1', value: 'Fever', vote: 0},\r\n      { id: '2', value: 'Cold', vote: 0},\r\n      { id: '3', value: 'High pressure', vote: 0},\r\n      { id: '4', value: 'Others', vote: 0},\r\n    ],\r\n    created: new Date(),\r\n    totalVote: 0,\r\n    opinions: []\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'What is your favorite programming language',\r\n    description: 'There are a lot of popular languages available. Among them what is your favorite?',\r\n    options: [\r\n      { id: '1', value: 'C', vote: 0},\r\n      { id: '2', value: 'Python', vote: 0},\r\n      { id: '3', value: 'Java', vote: 0},\r\n      { id: '4', value: 'JS', vote: 0},\r\n    ],\r\n    created: new Date(),\r\n    totalVote: 0,\r\n    opinions: []\r\n  }\r\n]\r\n\r\nexport default polls;","import React from \"react\";\r\nimport Sidebar from \"./components/sidebar\";\r\nimport MainContent from \"./components/main-content\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport POLLS from \"./data/polls\";\r\nimport shortid from \"shortid\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    polls: [],\r\n    selectedPoll: {},\r\n    searchTerm: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ polls: POLLS });\r\n    console.log(POLLS);\r\n  }\r\n\r\n  addNewPoll = (poll) => {\r\n    poll.id = shortid.generate();\r\n    poll.created = new Date();\r\n    poll.totalVote = 0;\r\n    poll.opinions = [];\r\n\r\n    this.setState({\r\n      // polls: [... this.state.polls, poll]\r\n      polls: this.state.polls.concat(poll), // same as previous line\r\n    });\r\n  };\r\n\r\n  updatePoll = (updatedPoll) => {\r\n    console.log(\"update poll \");\r\n    const polls = [...this.state.polls];\r\n    const poll = polls.find((p) => p.id === updatedPoll.id);\r\n\r\n    poll.title = updatedPoll.title;\r\n    poll.description = updatedPoll.description;\r\n    poll.options = updatedPoll.options;\r\n\r\n    this.setState({ polls });\r\n  };\r\n\r\n  deletePoll = (pollId) => {\r\n    const polls = this.state.polls.filter((p) => p.id !== pollId);\r\n    this.setState({ polls, selectedPoll: {} });\r\n  };\r\n\r\n  selectPoll = (pollId) => {\r\n    const poll = this.state.polls.find((p) => p.id === pollId);\r\n    console.log(\"select poll - \", pollId);\r\n    this.setState({ selectedPoll: poll });\r\n  };\r\n\r\n  getOpinion = (response) => {\r\n    const { polls } = this.state;\r\n    const poll = polls.find((p) => p.id === response.pollId);\r\n    const option = poll.options.find((o) => o.id === response.selectedOption);\r\n\r\n    poll.totalVote++;\r\n    option.vote++;\r\n\r\n    const opinion = {\r\n      id: shortid.generate(),\r\n      name: response.name,\r\n      selectedOption: response.selectedOption,\r\n    };\r\n\r\n    poll.opinions.push(opinion);\r\n    this.setState({ polls });\r\n  };\r\n\r\n  handleSearch = (searchTerm) => {\r\n    this.setState({\r\n      searchTerm,\r\n    });\r\n  };\r\n\r\n  performSearch = () => {\r\n    return this.state.polls.filter((poll) =>\r\n      poll.title.toLowerCase().includes(this.state.searchTerm.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const polls = this.performSearch()\r\n    console.log(this.state)\r\n    return (\r\n      <Container className=\"my-5\">\r\n        <Row>\r\n          <Col md={4}>\r\n            <Sidebar\r\n              polls={polls}\r\n              searchTerm={this.state.searchTerm}\r\n              handleSearch={this.handleSearch}\r\n              selectPoll={this.selectPoll}\r\n              addNewPoll={this.addNewPoll}\r\n            />\r\n          </Col>\r\n\r\n          <Col md={8}>\r\n            <MainContent\r\n              poll={this.state.selectedPoll}\r\n              getOpinion={this.getOpinion}\r\n              updatePoll={this.updatePoll}\r\n              deletePoll={this.deletePoll}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}